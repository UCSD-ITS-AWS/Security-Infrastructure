{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "UCSD Log Target AWS CloudFormation Template - this CFn template configures a given account to receive logs from other accounts so as to aggregate and then optionally forward those logs on to the UCSD Splunk installation.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Log Stream Inputs"
                    },
                    "Parameters": [
                        "LogStreamShardCount",
                        "LogStreamRetentionPeriod"
                    ]
                },
                {
                    "Label": {
                        "default": "S3 Log Destination Parameters"
                    },
                    "Parameters": [
                        "BucketName",
                        "CloudTrailKeyPrefix",
                        "LogMoveToGlacierInDays",
                        "LogDeleteFromGlacierInDays"
                    ]
                }
            ]
        }
    },
    "Outputs": {
        "BucketName": {
            "Description": "Name of the bucket for CloudTrail log delivery",
            "Value": {
                "Ref": "LogDeliveryBucket"
            }
        },
        "DeploymentAccount": {
            "Description": "Convenience Output for referencing AccountID of the log aggregation account",
            "Value": {
                "Ref": "AWS::AccountId"
            }
        },
        "SplunkKinesisLogStream": {
            "Description": "ARN of the kinesis stream for log aggregation.",
            "Value": {
                "Fn::GetAtt": [
                    "LogStream",
                    "Arn"
                ]
            }
        },
        "SplunkS3DeadLetterQueue": {
            "Description": "Dead letter queue for Splunk SQS S3 ingest",
            "Value": {
                "Fn::GetAtt": [
                    "deadLetterQueue",
                    "Arn"
                ]
            }
        },
        "SplunkS3Queue": {
            "Description": "Queue for Splunk SQS S3 ingest",
            "Value": {
                "Fn::GetAtt": [
                    "s3DeliveryQueue",
                    "Arn"
                ]
            }
        },
        "childAccountLogDeliveryDestinationArn": {
            "Description": "Log Destination to specify when deploying the source cloudformation template in other accounts.",
            "Value": {
                "Fn::GetAtt": [
                    "CWLtoKinesisDestination",
                    "Arn"
                ]
            }
        },
        "splunkCWLRegion": {
            "Description": "The AWS region that contains the data. In aws_cloudwatch_logs_tasks.conf, enter the region ID.",
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "splunkUserAccessKey": {
            "Description": "AWS Access Key for the user created for splunk to use when accessing logs",
            "Value": {
                "Ref": "splunkAccountUserCreds"
            }
        },
        "splunkUserSecretKey": {
            "Description": "AWS Secret Access Key ID for the user created for splunk to use when accessing logs",
            "Value": {
                "Fn::GetAtt": [
                    "splunkAccountUserCreds",
                    "SecretAccessKey"
                ]
            }
        }
    },
    "Parameters": {
        "BucketName": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Description": "Name to assign to the central logging retention bucket",
            "MaxLength": 64,
            "MinLength": 2,
            "Type": "String"
        },
        "CloudTrailKeyPrefix": {
            "Default": "",
            "Description": "Key name prefix for logs being sent to S3",
            "Type": "String"
        },
        "LogDeleteFromGlacierInDays": {
            "Default": 2555,
            "Description": "Number of days until logs are expired from Glacier and deleted",
            "Type": "Number"
        },
        "LogMoveToGlacierInDays": {
            "Default": 365,
            "Description": "Number of days until logs are expired from S3 and transitioned to Glacier",
            "Type": "Number"
        },
        "LogStreamRetentionPeriod": {
            "Default": 24,
            "Description": "Number of hours to retain logs in the Kinesis stream.",
            "MaxValue": 120,
            "MinValue": 24,
            "Type": "Number"
        },
        "LogStreamShardCount": {
            "Default": 1,
            "Description": "Number of shards to create within the AWS Kinesis stream created to handle CloudWatch Logs.",
            "MaxValue": 64,
            "MinValue": 1,
            "Type": "Number"
        }
    },
    "Resources": {
        "CWLtoKinesisDestination": {
            "DependsOn": [
                "CWLtoKinesisPolicy"
            ],
            "Properties": {
                "DestinationName": "CWLtoKinesisDestination",
                "DestinationPolicy": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"Version\" : \"2012-10-17\",\"Statement\" : [{\"Sid\" : \"\",\"Effect\" : \"Allow\",\"Principal\" : {\"AWS\" : [\"802640662990\",\"969379222189\",\"169929244869\"]},",
                            "\"Action\" : \"logs:PutSubscriptionFilter\",\"Resource\" : \"arn:aws:logs:",
                            {
                                "Fn::Join": [
                                    ":",
                                    [
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "destination",
                                        "CWLtoKinesisDestination"
                                    ]
                                ]
                            },
                            "\"}]}"
                        ]
                    ]
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "CWLtoKinesisRole",
                        "Arn"
                    ]
                },
                "TargetArn": {
                    "Fn::GetAtt": [
                        "LogStream",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::Logs::Destination"
        },
        "CWLtoKinesisPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "kinesis:PutRecord"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogStream",
                                        "Arn"
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "CWLtoKinesisRole",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "CWLtoKinesisPolicy",
                "Roles": [
                    {
                        "Ref": "CWLtoKinesisRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "CWLtoKinesisRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "logs.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com"
                                        ]
                                    ]
                                }
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "LogDeliveryBucket": {
            "DependsOn": [
                "LogStream",
                "s3DeliveryQueue"
            ],
            "Properties": {
                "AccessControl": "LogDeliveryWrite",
                "BucketName": {
                    "Ref": "BucketName"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "ExpirationInDays": {
                                "Ref": "LogDeleteFromGlacierInDays"
                            },
                            "Id": "S3ToGlacierTransition",
                            "Status": "Enabled",
                            "Transitions": [
                                {
                                    "StorageClass": "Glacier",
                                    "TransitionInDays": {
                                        "Ref": "LogMoveToGlacierInDays"
                                    }
                                }
                            ]
                        }
                    ]
                },
                "NotificationConfiguration": {
                    "QueueConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Queue": {
                                "Fn::GetAtt": [
                                    "s3DeliveryQueue",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "LogDeliveryBucketPolicy": {
            "Properties": {
                "Bucket": {
                    "Ref": "LogDeliveryBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetBucketAcl"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogDeliveryBucket",
                                        "Arn"
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "LogDeliveryBucket",
                                                    "Arn"
                                                ]
                                            },
                                            {
                                                "Ref": "CloudTrailKeyPrefix"
                                            },
                                            "/AWSLogs/",
                                            "802640662990",
                                            "/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "LogDeliveryBucket",
                                                    "Arn"
                                                ]
                                            },
                                            {
                                                "Ref": "CloudTrailKeyPrefix"
                                            },
                                            "/AWSLogs/",
                                            "969379222189",
                                            "/*"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "LogDeliveryBucket",
                                                    "Arn"
                                                ]
                                            },
                                            {
                                                "Ref": "CloudTrailKeyPrefix"
                                            },
                                            "/AWSLogs/",
                                            "169929244869",
                                            "/*"
                                        ]
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            "Type": "AWS::S3::BucketPolicy"
        },
        "LogS3DeliveryBucket": {
            "Type": "AWS::S3::Bucket"
        },
        "LogS3DeliveryPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:AbortMultipartUpload",
                                "s3:GetBucketLocation",
                                "s3:GetObject",
                                "s3:ListBucket",
                                "s3:ListBucketMultipartUploads",
                                "s3:PutObject"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "LogS3DeliveryBucket"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:s3:::",
                                            {
                                                "Ref": "LogS3DeliveryBucket"
                                            },
                                            "*"
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "kinesis:Get*",
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogStream",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "LogS3DeliveryPolicy",
                "Roles": [
                    {
                        "Ref": "LogS3DeliveryRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "LogS3DeliveryRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "firehose.amazonaws.com"
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "LogStream": {
            "Properties": {
                "RetentionPeriodHours": {
                    "Ref": "LogStreamRetentionPeriod"
                },
                "ShardCount": {
                    "Ref": "LogStreamShardCount"
                }
            },
            "Type": "AWS::Kinesis::Stream"
        },
        "LogToS3DeliveryStream": {
            "DependsOn": [
                "LogS3DeliveryPolicy"
            ],
            "Properties": {
                "DeliveryStreamName": "LogToS3DeliveryStream",
                "DeliveryStreamType": "KinesisStreamAsSource",
                "KinesisStreamSourceConfiguration": {
                    "KinesisStreamARN": {
                        "Fn::GetAtt": [
                            "LogStream",
                            "Arn"
                        ]
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "LogS3DeliveryRole",
                            "Arn"
                        ]
                    }
                },
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::GetAtt": [
                            "LogS3DeliveryBucket",
                            "Arn"
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 300,
                        "SizeInMBs": 50
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": "firehose/",
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "LogS3DeliveryRole",
                            "Arn"
                        ]
                    }
                }
            },
            "Type": "AWS::KinesisFirehose::DeliveryStream"
        },
        "deadLetterQueue": {
            "Type": "AWS::SQS::Queue"
        },
        "s3DeliveryQueue": {
            "Properties": {
                "MessageRetentionPeriod": 1209600,
                "RedrivePolicy": {
                    "deadLetterTargetArn": {
                        "Fn::GetAtt": [
                            "deadLetterQueue",
                            "Arn"
                        ]
                    },
                    "maxReceiveCount": 10
                },
                "VisibilityTimeout": 300
            },
            "Type": "AWS::SQS::Queue"
        },
        "s3DeliveryQueuePolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sqs:SendMessage"
                            ],
                            "Condition": {
                                "ArnLike": {
                                    "aws:SourceArn": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:*:*:",
                                                {
                                                    "Ref": "BucketName"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "*"
                            },
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "s3DeliveryQueue",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "Queues": [
                    {
                        "Ref": "s3DeliveryQueue"
                    }
                ]
            },
            "Type": "AWS::SQS::QueuePolicy"
        },
        "splunkAccountUserCreds": {
            "Properties": {
                "UserName": {
                    "Ref": "splunkS3SQSUser"
                }
            },
            "Type": "AWS::IAM::AccessKey"
        },
        "splunkAllAccessPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sqs:GetQueueAttributes",
                                "sqs:ListQueues",
                                "sqs:ReceiveMessage",
                                "sqs:GetQueueUrl",
                                "sqs:SendMessage",
                                "sqs:DeleteMessage",
                                "s3:ListBucket",
                                "s3:GetObject",
                                "s3:GetBucketLocation",
                                "s3:ListAllMyBuckets",
                                "s3:GetBucketTagging",
                                "s3:GetAccelerateConfiguration",
                                "s3:GetBucketLogging",
                                "s3:GetLifecycleConfiguration",
                                "s3:GetBucketCORS",
                                "config:DeliverConfigSnapshot",
                                "config:DescribeConfigRules",
                                "config:DescribeConfigRuleEvaluationStatus",
                                "config:GetComplianceDetailsByConfigRule",
                                "config:GetComplianceSummaryByConfigRule",
                                "iam:GetUser",
                                "iam:ListUsers",
                                "iam:GetAccountPasswordPolicy",
                                "iam:ListAccessKeys",
                                "iam:GetAccessKeyLastUsed",
                                "autoscaling:Describe*",
                                "cloudwatch:Describe*",
                                "cloudwatch:Get*",
                                "cloudwatch:List*",
                                "sns:Get*",
                                "sns:List*",
                                "sns:Publish",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents",
                                "ec2:DescribeInstances",
                                "ec2:DescribeReservedInstances",
                                "ec2:DescribeSnapshots",
                                "ec2:DescribeRegions",
                                "ec2:DescribeKeyPairs",
                                "ec2:DescribeNetworkAcls",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVolumes",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeImages",
                                "ec2:DescribeAddresses",
                                "lambda:ListFunctions",
                                "rds:DescribeDBInstances",
                                "cloudfront:ListDistributions",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "elasticloadbalancing:DescribeInstanceHealth",
                                "elasticloadbalancing:DescribeTags",
                                "elasticloadbalancing:DescribeTargetGroups",
                                "elasticloadbalancing:DescribeTargetHealth",
                                "elasticloadbalancing:DescribeListeners",
                                "inspector:Describe*",
                                "inspector:List*",
                                "kinesis:Get*",
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams",
                                "kms:Decrypt",
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "PolicyName": "splunkAllAccessPolicy20180224",
                "Roles": [],
                "Users": [
                    {
                        "Ref": "splunkS3SQSUser"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "splunkS3SQSUser": {
            "Properties": {
                "Path": "/",
                "UserName": "splunkS3SQSUser"
            },
            "Type": "AWS::IAM::User"
        }
    }
}