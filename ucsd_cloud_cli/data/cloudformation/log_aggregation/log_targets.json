{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "UCSD Log Target AWS CloudFormation Template - this CFn template configures a given account to receive logs from other accounts so as to aggregate and then optionally forward those logs on to the UCSD Splunk installation.",
    "Outputs": {
        "BucketName": {
            "Description": "Name of the bucket for CloudTrail log delivery",
            "Value": {
                "Ref": "LogDeliveryBucket"
            }
        },
        "DeploymentAccount": {
            "Description": "Convenience Output for referencing AccountID of the log aggregation account",
            "Value": {
                "Ref": "AWS::AccountId"
            }
        },
        "LogDeliveryDestinationArn": {
            "Description": "ARN of the Log Destination for log aggregation via CloudWatch Logs",
            "Value": {
                "Fn::GetAtt": [
                    "LogIngestDestination",
                    "Arn"
                ]
            }
        },
        "LogDeliveryIAMRole": {
            "Description": "ARN of the IAM role to supply to the source_log template for log delivery to the Kinesis Stream",
            "Value": {
                "Fn::GetAtt": [
                    "LogIngestIAMRole",
                    "Arn"
                ]
            }
        },
        "splunkAccountUserName": {
            "Description": "The AWS account or EC2 IAM role the Splunk platform uses to access your CloudWatch Logs data. In Splunk Web, select an account from the drop-down list. In aws_cloudwatch_logs_tasks.conf, enter the friendly name of one of the AWS accounts that you configured on the Configuration page or the name of the autodiscovered EC2 IAM role.",
            "Value": {
                "Ref": "splunkCWLClient"
            }
        },
        "splunkCWLRegion": {
            "Description": "The AWS region that contains the data. In aws_cloudwatch_logs_tasks.conf, enter the region ID.",
            "Value": {
                "Ref": "AWS::Region"
            }
        },
        "splunkUserAccessKey": {
            "Description": "AWS Access Key for the user created for splunk to use when accessing logs",
            "Value": {
                "Ref": "splunkAccountUserCreds"
            }
        },
        "splunkUserSecretKey": {
            "Description": "AWS Secret Access Key ID for the user created for splunk to use when accessing logs",
            "Value": {
                "Fn::GetAtt": [
                    "splunkAccountUserCreds",
                    "SecretAccessKey"
                ]
            }
        }
    },
    "Parameters": {
        "BucketName": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Description": "Name to assign to the central logging retention bucket",
            "MaxLength": 64,
            "MinLength": 2,
            "Type": "String"
        },
        "CloudTrailKeyPrefix": {
            "Default": "",
            "Description": "Key name prefix for logs being sent to S3",
            "Type": "String"
        },
        "LogDeleteFromGlacierInDays": {
            "Default": 2555,
            "Description": "Number of days until logs are expired from Glacier and deleted",
            "Type": "Number"
        },
        "LogMoveToGlacierInDays": {
            "Default": 365,
            "Description": "Number of days until logs are expired from S3 and transitioned to Glacier",
            "Type": "Number"
        },
        "LogStreamRetentionPeriod": {
            "Default": 24,
            "Description": "Number of hours to retain logs in the Kinesis stream.",
            "MaxValue": 120,
            "MinValue": 24,
            "Type": "Number"
        },
        "LogStreamShardCount": {
            "Default": 1,
            "Description": "Number of shards to create within the AWS Kinesis stream created to handle CloudWatch Logs.",
            "MaxValue": 64,
            "MinValue": 1,
            "Type": "Number"
        }
    },
    "Resources": {
        "LogDeliveryBucket": {
            "DependsOn": [
                "LogStream"
            ],
            "Properties": {
                "AccessControl": "LogDeliveryWrite",
                "BucketName": {
                    "Ref": "BucketName"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "ExpirationInDays": {
                                "Ref": "LogDeleteFromGlacierInDays"
                            },
                            "Id": "S3ToGlacierTransition",
                            "Status": "Enabled",
                            "Transitions": [
                                {
                                    "StorageClass": "Glacier",
                                    "TransitionInDays": {
                                        "Ref": "LogMoveToGlacierInDays"
                                    }
                                }
                            ]
                        }
                    ]
                },
                "NotificationConfiguration": {
                    "QueueConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:*",
                            "Queue": {
                                "Fn::GetAtt": [
                                    "s3DeliveryQueue",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "LogDeliveryBucketPolicy": {
            "Properties": {
                "Bucket": {
                    "Ref": "LogDeliveryBucket"
                },
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetBucketAcl"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogDeliveryBucket",
                                        "Arn"
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                            },
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Resource": []
                        }
                    ]
                }
            },
            "Type": "AWS::S3::BucketPolicy"
        },
        "LogIngestDestination": {
            "DependsOn": [
                "LogIngestIAMPolicy",
                "LogDeliveryBucket"
            ],
            "Properties": {
                "DestinationName": "LogIngestDestination",
                "DestinationPolicy": {
                    "Fn::Join": [
                        "",
                        [
                            "{\"Version\" : \"2012-10-17\",\"Statement\" : [",
                            "{\"Sid\" : \"\",",
                            "\"Effect\" : \"Allow\",",
                            "\"Principal\" : {\"AWS\" : []},",
                            "\"Action\" : \"logs:PutSubscriptionFilter\",",
                            "\"Resource\" : \"arn:aws:logs:",
                            {
                                "Fn::Join": [
                                    ":",
                                    [
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        "destination",
                                        "LogIngestDestination"
                                    ]
                                ]
                            },
                            "\"}",
                            "]}"
                        ]
                    ]
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "LogIngestIAMRole",
                        "Arn"
                    ]
                },
                "TargetArn": {
                    "Fn::GetAtt": [
                        "LogStream",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::Logs::Destination"
        },
        "LogIngestIAMPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "kinesis:PutRecord"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogStream",
                                        "Arn"
                                    ]
                                }
                            ]
                        },
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "LogIngestIAMRole",
                                        "Arn"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "PolicyName": "logingestpolicy20180211",
                "Roles": [
                    {
                        "Ref": "LogIngestIAMRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "LogIngestIAMRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "amazonaws.com"
                                        ]
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "amazonaws.com"
                                        ]
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "amazonaws.com"
                                        ]
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": {
                                    "Fn::Join": [
                                        ".",
                                        [
                                            "logs",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "amazonaws.com"
                                        ]
                                    ]
                                }
                            }
                        }
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "LogStream": {
            "Properties": {
                "RetentionPeriodHours": {
                    "Ref": "LogStreamRetentionPeriod"
                },
                "ShardCount": {
                    "Ref": "LogStreamShardCount"
                }
            },
            "Type": "AWS::Kinesis::Stream"
        },
        "s3DeliveryQueue": {
            "Properties": {
                "MessageRetentionPeriod": 1209600,
                "VisibilityTimeout": 300
            },
            "Type": "AWS::SQS::Queue"
        },
        "splunkAccountUserCreds": {
            "Properties": {
                "UserName": {
                    "Ref": "splunkCWLClient"
                }
            },
            "Type": "AWS::IAM::AccessKey"
        },
        "splunkAllAccessPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sqs:GetQueueAttributes",
                                "sqs:ListQueues",
                                "sqs:ReceiveMessage",
                                "sqs:GetQueueUrl",
                                "sqs:SendMessage",
                                "sqs:DeleteMessage",
                                "s3:ListBucket",
                                "s3:GetObject",
                                "s3:GetBucketLocation",
                                "s3:ListAllMyBuckets",
                                "s3:GetBucketTagging",
                                "s3:GetAccelerateConfiguration",
                                "s3:GetBucketLogging",
                                "s3:GetLifecycleConfiguration",
                                "s3:GetBucketCORS",
                                "config:DeliverConfigSnapshot",
                                "config:DescribeConfigRules",
                                "config:DescribeConfigRuleEvaluationStatus",
                                "config:GetComplianceDetailsByConfigRule",
                                "config:GetComplianceSummaryByConfigRule",
                                "iam:GetUser",
                                "iam:ListUsers",
                                "iam:GetAccountPasswordPolicy",
                                "iam:ListAccessKeys",
                                "iam:GetAccessKeyLastUsed",
                                "autoscaling:Describe*",
                                "cloudwatch:Describe*",
                                "cloudwatch:Get*",
                                "cloudwatch:List*",
                                "sns:Get*",
                                "sns:List*",
                                "sns:Publish",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams",
                                "logs:GetLogEvents",
                                "ec2:DescribeInstances",
                                "ec2:DescribeReservedInstances",
                                "ec2:DescribeSnapshots",
                                "ec2:DescribeRegions",
                                "ec2:DescribeKeyPairs",
                                "ec2:DescribeNetworkAcls",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVolumes",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeImages",
                                "ec2:DescribeAddresses",
                                "lambda:ListFunctions",
                                "rds:DescribeDBInstances",
                                "cloudfront:ListDistributions",
                                "elasticloadbalancing:DescribeLoadBalancers",
                                "elasticloadbalancing:DescribeInstanceHealth",
                                "elasticloadbalancing:DescribeTags",
                                "elasticloadbalancing:DescribeTargetGroups",
                                "elasticloadbalancing:DescribeTargetHealth",
                                "elasticloadbalancing:DescribeListeners",
                                "inspector:Describe*",
                                "inspector:List*",
                                "kinesis:Get*",
                                "kinesis:DescribeStream",
                                "kinesis:ListStreams",
                                "kms:Decrypt",
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "PolicyName": "splunkAllAccessPolicy20180224",
                "Roles": []
            },
            "Type": "AWS::IAM::Policy"
        },
        "splunkCWLClient": {
            "Properties": {
                "Path": "/",
                "UserName": "splunkCWLClient"
            },
            "Type": "AWS::IAM::User"
        },
        "splunkS3SQSUser": {
            "Properties": {
                "Path": "/",
                "UserName": "splunkS3SQSUser"
            },
            "Type": "AWS::IAM::User"
        }
    }
}